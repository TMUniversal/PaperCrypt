report_sizes: true

before:
  hooks:
    - go mod tidy
    - task generate
release:
  github:
    owner: tmuniversal
    name: PaperCrypt
  draft: false
  # If set to auto, will mark the release as not ready for production
  # in case there is an indicator for this in the tag e.g. v1.0.0-rc1
  # If set to true, will mark the release as not ready for production.
  # Default is false.
  prerelease: auto

builds:
  - main: .
    binary: papercrypt
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
    ldflags:
      - '-s -w -X main.version={{.Version}} -X main.commit={{.FullCommit}} -X main.branch={{.Branch}} -X main.tag={{.Tag}} -X main.repo={{.GitURL}} -X main.dirty={{.IsGitDirty}} -X main.date={{.Date}} -X main.builtBy=goreleaser -X main.os={{.Os}} -X main.arch={{.Arch}}'

gomod:
  proxy: true
  env:
    - GOPROXY=https://proxy.golang.org,direct
    - GOSUMDB=sum.golang.org
  mod: mod

upx:
  - enabled: true
    compress: best
    lzma: true
    brute: true

archives:
  - format: tar.gz
    # this name template makes the OS and Arch compatible with the results of uname.
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # use zip for windows archives
    format_overrides:
      - goos: windows
        format: zip
    files:
      - COPYING
      - README.md
      - CHANGELOG.md

checksum:
  name_template: "checksums.txt"

snapshot:
  name_template: "{{ incpatch .Version }}-next"

changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"

signs:
  - cmd: cosign
    stdin: '{{ .Env.COSIGN_PASSWORD }}'
    args:
      - "sign-blob"
      - "--key=cosign.pub"
      - "--output-signature==${signature}"
      - "${artifact}"
      - "--yes"
    artifacts: all

docker_signs:
  - artifacts: all
    stdin: '{{ .Env.COSIGN_PASSWORD }}'

#brews:
#  - name: papercrypt
#    tap:
#      owner: tmuniversal
#      name: homebrew-tap
#      token: "{{ .Env.GORELEASER_TOKEN_TAP }}"
#    commit_author:
#      name: TMUniversal
#      email: me@tmuniversal.eu
#    homepage: https://github.com/TMUniversal/PaperCrypt
#    description: "A tool to generate paper backups of your passwords and other secrets."

dockers:
  - image_templates:
      - ghcr.io/tmuniversal/papercrypt:{{ .Tag }}-amd64
    goarch: amd64
    use: buildx
    dockerfile: Dockerfile
    build_flag_templates:
      - "--pull"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.name={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.source={{.GitURL}}"
      - "--platform=linux/amd64"
  - image_templates:
      - ghcr.io/tmuniversal/papercrypt:{{ .Tag }}-arm64
    goarch: arm64
    use: buildx
    dockerfile: Dockerfile
    build_flag_templates:
      - "--pull"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.name={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.source={{.GitURL}}"
      - "--platform=linux/arm64"

docker_manifests:
  - id: papercrypt-latest
    name_template: ghcr.io/tmuniversal/papercrypt:latest
    image_templates:
      - ghcr.io/tmuniversal/papercrypt:{{ .Tag }}-amd64
      - ghcr.io/tmuniversal/papercrypt:{{ .Tag }}-arm64
    skip_push: auto
  - id: papercrypt-Tag
    name_template: ghcr.io/tmuniversal/papercrypt:{{ .Tag }}
    image_templates:
      - ghcr.io/tmuniversal/papercrypt:{{ .Tag }}-amd64
      - ghcr.io/tmuniversal/papercrypt:{{ .Tag }}-arm64
# The lines beneath this are called `modelines`. See `:help modeline`
# Feel free to remove those if you don't want/use them.
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj
